import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ACMClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ACMClient";
import { AddTagsToCertificateRequest } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface AddTagsToCertificateCommandInput
  extends AddTagsToCertificateRequest {}
export interface AddTagsToCertificateCommandOutput extends __MetadataBearer {}
export declare class AddTagsToCertificateCommand extends $Command<
  AddTagsToCertificateCommandInput,
  AddTagsToCertificateCommandOutput,
  ACMClientResolvedConfig
> {
  readonly input: AddTagsToCertificateCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: AddTagsToCertificateCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ACMClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    AddTagsToCertificateCommandInput,
    AddTagsToCertificateCommandOutput
  >;
  private serialize;
  private deserialize;
}
