import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ACMClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ACMClient";
import {
  GetCertificateRequest,
  GetCertificateResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetCertificateCommandInput extends GetCertificateRequest {}
export interface GetCertificateCommandOutput
  extends GetCertificateResponse,
    __MetadataBearer {}
export declare class GetCertificateCommand extends $Command<
  GetCertificateCommandInput,
  GetCertificateCommandOutput,
  ACMClientResolvedConfig
> {
  readonly input: GetCertificateCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetCertificateCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ACMClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetCertificateCommandInput, GetCertificateCommandOutput>;
  private serialize;
  private deserialize;
}
