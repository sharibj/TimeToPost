import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  BlobPayloadInputTypes,
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  APIGatewayClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../APIGatewayClient";
import { ImportRestApiRequest, RestApi } from "../models/models_0";
export { __MetadataBearer, $Command };
export type ImportRestApiCommandInputType = Pick<
  ImportRestApiRequest,
  Exclude<keyof ImportRestApiRequest, "body">
> & {
  body: BlobPayloadInputTypes;
};
export interface ImportRestApiCommandInput
  extends ImportRestApiCommandInputType {}
export interface ImportRestApiCommandOutput extends RestApi, __MetadataBearer {}
export declare class ImportRestApiCommand extends $Command<
  ImportRestApiCommandInput,
  ImportRestApiCommandOutput,
  APIGatewayClientResolvedConfig
> {
  readonly input: ImportRestApiCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ImportRestApiCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: APIGatewayClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<ImportRestApiCommandInput, ImportRestApiCommandOutput>;
  private serialize;
  private deserialize;
}
